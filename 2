FROM ubuntu:20.04

MAINTAINER Raghu T <raghu.t@iopex.com>

# Add a new user "iopex" with user id 3333
RUN useradd -ms /bin/bash -u 3333 iopex

# Install dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    vim \
    wget \
    curl \
    python3 \
    python3-dev \
    python3-pip \
    libmysqlclient-dev \
    python3-pymysql \
    libleptonica-dev \
    python3-unidecode \
    language-pack-en \
    nginx \
    python3-setuptools python3-opencv poppler-utils libssl-dev \
    python python-dev supervisor \
    gnupg2 \
    cron \
    openssl \
    ca-certificates

# Install wkhtmltopdf
RUN wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb && \
    apt install -y ./wkhtmltox_0.12.6-1.focal_amd64.deb

# Install Microsoft ODBC
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 && \
    apt-get update && apt-get install -y unixodbc-dev && \
    apt-get update && apt-get install -y python3-dev libmysqlclient-dev

# Install Google Cloud SDK and BigQuery CLI
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
    apt-get update && apt-get install -y google-cloud-sdk && \
    gcloud components install bq

WORKDIR /var/opt

COPY . /var/opt

RUN python3 -m pip install --upgrade pip && pip install -r requirements.txt

# Copy and set up service account key for BigQuery
COPY path/to/your-service-account-key.json /var/opt/key.json
ENV GOOGLE_APPLICATION_CREDENTIALS="/var/opt/key.json"

# Query BigQuery and save results
RUN bq query --use_legacy_sql=false --format=csv 'SELECT * FROM `your-project.your-dataset.your-table`' > /var/opt/output.csv

# Change to non-root privilege
# USER iopex
ENV MANUAL_EMAIL mail.test2@iopex.com
ENV MANUAL_EMAIL_HOST mail2.iopex.com
ENV MANUAL_EMAIL_PORT 587
ENV MANUAL_EMAIL_HOST_USER mail.test2@iopex.com
ENV MANUAL_EMAIL_HOST_PASSWORD iopex@123

RUN rm -rf /var/opt/media
RUN rm -rf /var/opt/db_data

RUN mkdir media
RUN mkdir /var/opt/media/log
RUN mkdir /var/opt/media/sample

ADD ./media/sample/* /var/opt/media/sample/

RUN mv -f /var/opt/opexwise/settings.py.dist /var/opt/opexwise/settings.py

RUN export LC_ALL="en_US.UTF-8"

RUN mkdir -p /etc/uwsgi/sites
RUN mkdir /etc/uwsgi/vassals
RUN ln -s /var/opt/opexwise.ini /etc/uwsgi/vassals/
RUN mv -f /var/opt/nginx/default /etc/nginx/sites-available/
RUN echo "daemon off;" >> /etc/nginx/nginx.conf

# Change to executable mode
RUN chmod a+x /var/opt/background.sh
RUN chmod a+x /var/opt/start.sh

# Add cron file
COPY opexwise-cron /etc/cron.d/opexwise-cron

EXPOSE 80

HEALTHCHECK CMD (pgrep -f nginx | pgrep -f background.sh) || exit 1

ENTRYPOINT ["./start.sh"]
